unite_war = {  #by 大夏龙帝志
	group = conquest
	
	combine_into_one = yes
	mutually_exclusive_titles = { always = yes }
	
	allowed_for_character = {
		capital_province = { geographical_region = world_asia_china }
		is_independent_ruler = yes
	}
	allowed_against_character = {
		capital_province = { geographical_region = world_asia_china }
		is_independent_ruler = yes
	}
	target_titles = neighbor_land
	target_title_tier = kingdom
	target_de_jure_regions_above = yes
	
	on_declaration = {
		on_declared_war = yes
	}
	
	cost = {
		gold = scope:attacker.diplomacy
		piety = 70
		prestige = 70
	}

	on_victory_desc = {
		desc = debug_war_victory_desc
	}
	
	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }
		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}
		setup_invasion_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			change = scope:change
			take_occupied = yes
		}
		resolve_title_and_vassal_change = scope:change
	}

	on_white_peace_desc = {
		desc = debug_war_white_peace_desc
	}
	
	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }
		# Truce
		add_truce_white_peace_effect = yes
	}

	on_defeat_desc = {
		desc = debug_war_white_peace_desc
	}
	
	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }
	}
	
	on_invalidated = {
	}
	
	on_invalidated_desc = {
		desc = debug_war_invalidated_desc
	}
	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit
	
	transfer_behavior = transfer
	attacker_ticking_warscore = 0.01
	defender_ticking_warscore = 0.05	

	ignore_effect = change_title_holder
	war_name = "CHINA_WAR_OF_REUNIFICATION_NAME"
	cb_name_no_target = "WAR_OF_REUNIFICATION"
	ai_only_against_neighbors = yes
	interface_priority = 100
	
	#attacker_ticking_warscore = NWar::ATTACKER_TICKING_WAR_SCORE
	#attacker_ticking_warscore_delay = NWar::ATTACKER_TICKING_WAR_SCORE_DELAY_DAYS # e.g. { months = 12 }
	#defender_ticking_warscore = NWar::DEFENDER_TICKING_WAR_SCORE
	#defender_ticking_warscore_delay = NWar::DEFENDER_TICKING_WAR_SCORE_DELAY_DAYS # e.g. { months = 12 }
	#ticking_war_score_targets_entire_realm = yes
	attacker_wargoal_percentage = 0.5					# How much the Attacker need to occupy of a wargoal to gain ticking War Score. 0.0 means "at least one occupation"
	defender_wargoal_percentage = 1

	battle_participation_mult = 1.2
	should_show_war_goal_subview = yes
}
steppe_war = {
	group = conquest
	
	combine_into_one = yes
	mutually_exclusive_titles = { always = yes }
	
	allowed_for_character = {
		capital_province = { geographical_region = world_steppe }
		is_independent_ruler = yes
	}
	allowed_against_character = {
		capital_province = { geographical_region = world_steppe }
		is_independent_ruler = yes
		NOT = {
			has_primary_title = title:k_xia
		}
	}
	target_titles = neighbor_land
	target_title_tier = kingdom
	target_de_jure_regions_above = yes
	
	on_declaration = {
		on_declared_war = yes
	}
	
	cost = {
		gold = scope:attacker.diplomacy
		piety = 50
		prestige = 100
	}

	on_victory_desc = {
		desc = debug_war_victory_desc
	}
	
	on_victory = {
		scope:attacker = { show_pow_release_message_effect = yes }
		create_title_and_vassal_change = {
			type = conquest
			save_scope_as = change
			add_claim_on_loss = yes
		}
		setup_invasion_cb = {
			titles = target_titles
			attacker = scope:attacker
			defender = scope:defender
			change = scope:change
			take_occupied = yes
		}
		#scope:attacker = {
			#add_title_law = xia_succession_law
		#	change_government = imperial_government
		#}
		#every_held_title = { #Should destroy all other Empires owned at the time.
		#	limit = {
		#		tier = tier_kingdom
		#	}
		#	root = { destroy_title = prev }
		#}
		resolve_title_and_vassal_change = scope:change
	}

	on_white_peace_desc = {
		desc = debug_war_white_peace_desc
	}
	
	on_white_peace = {
		scope:attacker = { show_pow_release_message_effect = yes }
		# Truce
		add_truce_white_peace_effect = yes
	}

	on_defeat_desc = {
		desc = steppe_war_defeat_desc
	}
	
	on_defeat = {
		scope:attacker = { show_pow_release_message_effect = yes }
		scope:defender = {
			create_title_and_vassal_change = {
				type = conquest
				save_scope_as = change
				add_claim_on_loss = yes
			}
			setup_invasion_cb = {
				titles = scope:attacker.primary_title
				attacker = scope:defender
				defender = scope:attacker
				change = scope:change
				take_occupied = yes
			}
			resolve_title_and_vassal_change = scope:change
			#every_held_title = { #Should destroy all other Empires owned at the time.
				#limit = {
					#tier = tier_kingdom
				#}
				#root = { destroy_title = prev }
			#}
		}
#		primary_attacker={ # 不知道对不对，只是单纯的使得every_held_title的scope能正确匹配
#			every_held_title = { #Should destroy all other Empires owned at the time.
#				limit = {
#					tier = tier_kingdom
#				}
#				change_title_holder = {
#					holder = scope:defender
#					change = scope:change
#				}
#			}
#		}
		#scope:defender = {
		#	#add_title_law = xia_succession_law
		#	change_government = imperial_government
		#}
		#resolve_title_and_vassal_change = scope:change
	}
	
	on_invalidated = {
	}
	
	on_invalidated_desc = {
		desc = debug_war_invalidated_desc
	}
	on_primary_attacker_death = inherit
	on_primary_defender_death = inherit
	
	transfer_behavior = transfer
	attacker_ticking_warscore = 0.01
	defender_ticking_warscore = 0.05	

	ignore_effect = change_title_holder
	war_name = "STEPPE_WAR_OF_REUNIFICATION_NAME"
	cb_name_no_target = "STEPPE_WAR_OF_REUNIFICATION"
	ai_only_against_neighbors = yes
	interface_priority = 100
	
	#attacker_ticking_warscore = NWar::ATTACKER_TICKING_WAR_SCORE
	#attacker_ticking_warscore_delay = NWar::ATTACKER_TICKING_WAR_SCORE_DELAY_DAYS # e.g. { months = 12 }
	#defender_ticking_warscore = NWar::DEFENDER_TICKING_WAR_SCORE
	#defender_ticking_warscore_delay = NWar::DEFENDER_TICKING_WAR_SCORE_DELAY_DAYS # e.g. { months = 12 }
	#ticking_war_score_targets_entire_realm = yes
	attacker_wargoal_percentage = 0.5					# How much the Attacker need to occupy of a wargoal to gain ticking War Score. 0.0 means "at least one occupation"
	defender_wargoal_percentage = 1

	battle_participation_mult = 1.2
	should_show_war_goal_subview = yes
}